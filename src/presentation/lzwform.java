/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentation;

import java.io.ByteArrayOutputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lzwkapoc.Lzwkapoc;

/**
 *
 * @author cristian-gil
 */
public class lzwform extends javax.swing.JFrame {

    // <editor-fold defaultstate="collapsed" desc=" ATTRIBUTES">
    private Lzwkapoc instance;
    // </editor-fold>
    
    private int code;

    // <editor-fold defaultstate="collapsed" desc="CONSTRUCTORS">
    /**
     * Creates new form lzwform
     */
    public lzwform() {
        initComponents();
        instance = new Lzwkapoc();
        code = 0;
    }
    // </editor-fold>

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDiccionario = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtLetra = new javax.swing.JTextPane();
        BtnLimpiar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtEntrada = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtSalida = new javax.swing.JTextArea();
        btnCodificar = new javax.swing.JButton();
        btnDecodificar = new javax.swing.JButton();
        BtnDiccionarioCompleto = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Algoritmo Lzw");
        setName("Lzw"); // NOI18N

        jInternalFrame1.setVisible(true);

        tableDiccionario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Letra", "Codigo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableDiccionario);

        jLabel1.setText("Diccionario");

        txtLetra.setToolTipText("Agregar letra a diccionario");
        txtLetra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLetraKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLetraKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(txtLetra);

        BtnLimpiar.setText("Limpiar Diccionario");
        BtnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLimpiarActionPerformed(evt);
            }
        });

        jPanel1.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.disabledShadow"));

        jLabel2.setText("Entrada");

        jLabel3.setText("Salida");

        txtEntrada.setBackground(java.awt.Color.black);
        txtEntrada.setColumns(20);
        txtEntrada.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtEntrada.setForeground(new java.awt.Color(0, 255, 255));
        txtEntrada.setRows(5);
        jScrollPane3.setViewportView(txtEntrada);

        txtSalida.setEditable(false);
        txtSalida.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.light"));
        txtSalida.setColumns(20);
        txtSalida.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtSalida.setForeground(new java.awt.Color(255, 51, 0));
        txtSalida.setRows(5);
        jScrollPane4.setViewportView(txtSalida);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(173, 173, 173))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnCodificar.setText("Comprimir");
        btnCodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCodificarActionPerformed(evt);
            }
        });

        btnDecodificar.setText("Descomprimir");
        btnDecodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecodificarActionPerformed(evt);
            }
        });

        BtnDiccionarioCompleto.setText("Diccionario Completo");
        BtnDiccionarioCompleto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDiccionarioCompletoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(btnCodificar, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btnDecodificar, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(BtnDiccionarioCompleto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(BtnLimpiar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addGap(56, 56, 56)
                                        .addComponent(jLabel1))
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(3, 3, 3)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BtnLimpiar)
                        .addGap(18, 18, 18)
                        .addComponent(BtnDiccionarioCompleto)))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCodificar)
                    .addComponent(btnDecodificar))
                .addContainerGap())
        );

        BtnLimpiar.getAccessibleContext().setAccessibleName("BtnAgregar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // <editor-fold defaultstate="collapsed" desc="EVENTS">

    private void BtnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLimpiarActionPerformed
        instance.cleanDictionary();
        DefaultTableModel model = (DefaultTableModel) this.tableDiccionario.getModel();
        model.setRowCount(0);
        code = 0;
        this.btnCodificar.setEnabled(true);
        this.txtEntrada.setText("");
        this.txtSalida.setText("");
        txtLetra.setEnabled(true);
        BtnDiccionarioCompleto.setEnabled(true);
    }//GEN-LAST:event_BtnLimpiarActionPerformed

    private void txtLetraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLetraKeyPressed

    }//GEN-LAST:event_txtLetraKeyPressed

    private void txtLetraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLetraKeyReleased
        addLetter();
        this.BtnDiccionarioCompleto.setEnabled(false);
    }//GEN-LAST:event_txtLetraKeyReleased

    private void btnCodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCodificarActionPerformed
        List<Integer> kapoc;
        int weigthOriginal=0; 
        byte[] b = txtEntrada.getText().getBytes();;
        
        try {
            kapoc = instance.compress(txtEntrada.getText());
            StringBuilder sb = new StringBuilder();
            
            for (Integer value : kapoc) {
                if (value!= null){
                    sb.append(value.toString()).append(",");
                } 
            }
            
            StringBuilder sb2 = new StringBuilder();
            for (Integer value : kapoc) {
                if (value!= null){
                    sb2.append(value.toString());
                } 
            }
            
            txtSalida.setText(sb.toString());
            JOptionPane.showMessageDialog(this,"Se ha comprimido exitosamente \n tamaño original: " + b.length + " \n tamaño comprimido" + sb2.toString().getBytes().length  ,"EXITOSO", JOptionPane.INFORMATION_MESSAGE);
            this.btnCodificar.setEnabled(false);
        } catch (Exception ex) {
            Logger.getLogger(lzwform.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this,ex.getMessage() ,"Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCodificarActionPerformed

    private void btnDecodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecodificarActionPerformed
        String data =  txtEntrada.getText();
        String[] splitdata = data.split(",");
        List<Integer> kapoc =  new ArrayList<Integer>();
       
        for (int i = 0; i < splitdata.length; i++) {
            kapoc.add(Integer.parseInt(splitdata[i]));
        }
        
        String result = instance.decompress(kapoc);
        txtSalida.setText(result);
    
        JOptionPane.showMessageDialog(this,"Se ha descomprimido exitosamente!!!" ,"EXITOSO", JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_btnDecodificarActionPerformed

    private void BtnDiccionarioCompletoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDiccionarioCompletoActionPerformed
        this.txtLetra.setEnabled(false);
        for (int i = 0; i < 256; i++){
            instance.setDictionary((""+(char)i), i);
        }  
        this.drawTable();
    }//GEN-LAST:event_BtnDiccionarioCompletoActionPerformed

    // </editor-fold>
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnDiccionarioCompleto;
    private javax.swing.JButton BtnLimpiar;
    private javax.swing.JButton btnCodificar;
    private javax.swing.JButton btnDecodificar;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tableDiccionario;
    private javax.swing.JTextArea txtEntrada;
    private javax.swing.JTextPane txtLetra;
    private javax.swing.JTextArea txtSalida;
    // End of variables declaration//GEN-END:variables

// <editor-fold defaultstate="collapsed" desc="METHODS">    
    private void addLetter() {
        String letter = this.txtLetra.getText();

        if (letter.length() > 1 || letter.equals("")) {
            this.txtLetra.setText("");
        } else {
            //int codigo = (int) letter.charAt(0);
            DefaultTableModel model = (DefaultTableModel) this.tableDiccionario.getModel();
            
            if (instance.setDictionary(letter, code)){
                model.addRow(new Object[]{letter, code});
            }else{
                JOptionPane.showMessageDialog(this, "La letra |" +  letter + "| ya esta en el diccionario","Error", JOptionPane.ERROR_MESSAGE);
            }
            
            this.txtLetra.setText("");
            code++;
        }
    }
    
    private void drawTable(){
        
        DefaultTableModel model = (DefaultTableModel) this.tableDiccionario.getModel();
        model.setRowCount(0);
        
        for (Map.Entry<String, Integer> entry : instance.dictionary.entrySet()){    
            model.addRow(new Object[]{entry.getKey(), entry.getValue()});
        }
    }
}
 // </editor-fold>
